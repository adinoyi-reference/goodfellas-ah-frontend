// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signup UI render features container should render as expected 1`] = `
<_default>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <Connect(SignupForm)>
      <SignupForm
        clearSigninError={[Function]}
        message=""
        signup={[Function]}
      >
        <form
          className="auth-signup"
          onSubmit={[Function]}
        >
          <p
            className="error-field"
          />
          <AuthInput
            error={
              Object {
                "confirmPassword": "Please confirm your password.",
                "email": "Please enter a valid email.",
                "firstname": "Please enter your first name",
                "lastname": "Please enter your last name",
                "password": "Please enter a valid password.",
                "status": true,
              }
            }
            handleBlur={[Function]}
            handleChange={[Function]}
            name="firstname"
            placeholder="First name"
            touched={
              Object {
                "confirmPassword": false,
                "email": false,
                "firstname": false,
                "lastname": false,
                "password": false,
              }
            }
            value=""
          >
            <div
              className="auth-input-wrapper"
            >
              <label
                className="sr-only"
                htmlFor="firstname"
              >
                firstname
              </label>
              <input
                className="auth-field "
                id="firstname"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="First name"
                type="text"
                value=""
              />
              <div
                className="error-field"
              />
            </div>
          </AuthInput>
          <AuthInput
            error={
              Object {
                "confirmPassword": "Please confirm your password.",
                "email": "Please enter a valid email.",
                "firstname": "Please enter your first name",
                "lastname": "Please enter your last name",
                "password": "Please enter a valid password.",
                "status": true,
              }
            }
            handleBlur={[Function]}
            handleChange={[Function]}
            name="lastname"
            placeholder="Last name"
            touched={
              Object {
                "confirmPassword": false,
                "email": false,
                "firstname": false,
                "lastname": false,
                "password": false,
              }
            }
            value=""
          >
            <div
              className="auth-input-wrapper"
            >
              <label
                className="sr-only"
                htmlFor="lastname"
              >
                lastname
              </label>
              <input
                className="auth-field "
                id="lastname"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Last name"
                type="text"
                value=""
              />
              <div
                className="error-field"
              />
            </div>
          </AuthInput>
          <AuthInput
            error={
              Object {
                "confirmPassword": "Please confirm your password.",
                "email": "Please enter a valid email.",
                "firstname": "Please enter your first name",
                "lastname": "Please enter your last name",
                "password": "Please enter a valid password.",
                "status": true,
              }
            }
            handleBlur={[Function]}
            handleChange={[Function]}
            name="email"
            placeholder="Email"
            touched={
              Object {
                "confirmPassword": false,
                "email": false,
                "firstname": false,
                "lastname": false,
                "password": false,
              }
            }
            value=""
          >
            <div
              className="auth-input-wrapper"
            >
              <label
                className="sr-only"
                htmlFor="email"
              >
                email
              </label>
              <input
                className="auth-field "
                id="email"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Email"
                type="text"
                value=""
              />
              <div
                className="error-field"
              />
            </div>
          </AuthInput>
          <AuthInput
            error={
              Object {
                "confirmPassword": "Please confirm your password.",
                "email": "Please enter a valid email.",
                "firstname": "Please enter your first name",
                "lastname": "Please enter your last name",
                "password": "Please enter a valid password.",
                "status": true,
              }
            }
            handleBlur={[Function]}
            handleChange={[Function]}
            name="password"
            placeholder="Password"
            touched={
              Object {
                "confirmPassword": false,
                "email": false,
                "firstname": false,
                "lastname": false,
                "password": false,
              }
            }
            type="password"
            value=""
          >
            <div
              className="auth-input-wrapper"
            >
              <label
                className="sr-only"
                htmlFor="password"
              >
                password
              </label>
              <input
                className="auth-field "
                id="password"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Password"
                type="password"
                value=""
              />
              <div
                className="error-field"
              />
            </div>
          </AuthInput>
          <AuthInput
            error={
              Object {
                "confirmPassword": "Please confirm your password.",
                "email": "Please enter a valid email.",
                "firstname": "Please enter your first name",
                "lastname": "Please enter your last name",
                "password": "Please enter a valid password.",
                "status": true,
              }
            }
            handleBlur={[Function]}
            handleChange={[Function]}
            name="confirmPassword"
            placeholder="Confirm Password"
            touched={
              Object {
                "confirmPassword": false,
                "email": false,
                "firstname": false,
                "lastname": false,
                "password": false,
              }
            }
            type="password"
            value=""
          >
            <div
              className="auth-input-wrapper"
            >
              <label
                className="sr-only"
                htmlFor="confirmPassword"
              >
                confirmPassword
              </label>
              <input
                className="auth-field "
                id="confirmPassword"
                onBlur={[Function]}
                onChange={[Function]}
                placeholder="Confirm Password"
                type="password"
                value=""
              />
              <div
                className="error-field"
              />
            </div>
          </AuthInput>
          <Button
            className="auth-button"
            title="SIGN UP"
            type="submit"
          >
            <button
              className="auth-button"
              type="submit"
            >
              SIGN UP
            </button>
          </Button>
        </form>
      </SignupForm>
    </Connect(SignupForm)>
  </Provider>
</_default>
`;
