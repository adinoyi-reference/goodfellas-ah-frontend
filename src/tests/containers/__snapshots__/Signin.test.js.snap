// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signin UI render features container should render as expected 1`] = `
<_default>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          Object {
            "key": "testKey",
          },
        ]
      }
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/",
                "search": "",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Connect(Signin)>
          <Signin
            signin={[Function]}
          >
            <form
              className="auth-signin"
              onSubmit={[Function]}
            >
              <div
                className="error-field"
              />
              <AuthInput
                error={
                  Object {
                    "email": "Please enter a valid email.",
                    "password": "Please enter a valid password.",
                    "status": true,
                  }
                }
                handleBlur={[Function]}
                handleChange={[Function]}
                name="email"
                placeholder="Email"
                touched={
                  Object {
                    "email": false,
                    "password": false,
                  }
                }
                value=""
              >
                <div
                  className="auth-input-wrapper"
                >
                  <label
                    className="sr-only"
                    htmlFor="email"
                  >
                    email
                  </label>
                  <input
                    className="auth-field "
                    id="email"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Email"
                    type="text"
                    value=""
                  />
                  <div
                    className="error-field"
                  />
                </div>
              </AuthInput>
              <AuthInput
                error={
                  Object {
                    "email": "Please enter a valid email.",
                    "password": "Please enter a valid password.",
                    "status": true,
                  }
                }
                handleBlur={[Function]}
                handleChange={[Function]}
                name="password"
                placeholder="Password"
                touched={
                  Object {
                    "email": false,
                    "password": false,
                  }
                }
                type="password"
                value=""
              >
                <div
                  className="auth-input-wrapper"
                >
                  <label
                    className="sr-only"
                    htmlFor="password"
                  >
                    password
                  </label>
                  <input
                    className="auth-field "
                    id="password"
                    onBlur={[Function]}
                    onChange={[Function]}
                    placeholder="Password"
                    type="password"
                    value=""
                  />
                  <div
                    className="error-field"
                  />
                </div>
              </AuthInput>
              <div>
                <Link
                  replace={false}
                  to="/forgotpassword"
                >
                  <a
                    href="/forgotpassword"
                    onClick={[Function]}
                  >
                    <div
                      className="forgot-password"
                    >
                      Forgot Password?
                    </div>
                  </a>
                </Link>
              </div>
              <Button
                className="auth-button"
                title="SIGN IN"
                type="submit"
              >
                <button
                  className="auth-button"
                  type="submit"
                >
                  SIGN IN
                </button>
              </Button>
            </form>
          </Signin>
        </Connect(Signin)>
      </Router>
    </MemoryRouter>
  </Provider>
</_default>
`;
